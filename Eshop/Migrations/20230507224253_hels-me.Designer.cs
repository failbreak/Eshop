// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(EshopContext))]
    [Migration("20230507224253_hels-me")]
    partial class helsme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "First Person Shooter"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Action"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Strategy"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Adventure"
                        },
                        new
                        {
                            CategoryId = 5,
                            Name = "RolePlay"
                        },
                        new
                        {
                            CategoryId = 6,
                            Name = "SEX"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataLayer.Entities.Manufacture", b =>
                {
                    b.Property<int>("ManufactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufactureId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufactureId");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            ManufactureId = 1,
                            Name = "HailStorm"
                        },
                        new
                        {
                            ManufactureId = 2,
                            Name = "Volvo"
                        },
                        new
                        {
                            ManufactureId = 3,
                            Name = "BigHard"
                        },
                        new
                        {
                            ManufactureId = 4,
                            Name = "NotActivision"
                        },
                        new
                        {
                            ManufactureId = 5,
                            Name = "Bluray Project Blue"
                        },
                        new
                        {
                            ManufactureId = 6,
                            Name = "Todd Howard"
                        },
                        new
                        {
                            ManufactureId = 7,
                            Name = "RecycleSoft"
                        },
                        new
                        {
                            ManufactureId = 8,
                            Name = "Popstar Games"
                        },
                        new
                        {
                            ManufactureId = 9,
                            Name = "EEEEEEEeee"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DataLayer.Entities.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Items")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("DataLayer.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ManufactureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufactureId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 5,
                            IsDeleted = false,
                            ManufactureId = 8,
                            Name = "Grand Thug Auto 6: Watch Me NAE NAE",
                            Price = 69m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 4,
                            IsDeleted = false,
                            ManufactureId = 6,
                            Name = "The elder scrolls 6: Shimmering Booty",
                            Price = 420m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 9,
                            Name = "Only Hands",
                            Price = 0m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Black Hens 1",
                            Price = 1000m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Black Hens 2",
                            Price = 1000m
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 1,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Black Hens 3",
                            Price = 1000m
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Black Hens 4",
                            Price = 1000m
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Modern FartFare",
                            Price = 100m
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Modern FartFare 2",
                            Price = 100m
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Modern FartFare 3",
                            Price = 102m
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 1,
                            Name = "Call Of Booty: Modern FartFare 4",
                            Price = 100m
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 7,
                            Name = "I ran out of ideas",
                            Price = 600m
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 6,
                            IsDeleted = false,
                            ManufactureId = 3,
                            Name = "I ran out of ideas 2",
                            Price = 220m
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.ProductPicture", b =>
                {
                    b.Property<int>("ProductPictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductPictureId"));

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductPictureId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPicture");

                    b.HasData(
                        new
                        {
                            ProductPictureId = 1,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            ProductPictureId = 2,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            ProductPictureId = 3,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            ProductPictureId = 4,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            ProductPictureId = 5,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            ProductPictureId = 6,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            ProductPictureId = 7,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            ProductPictureId = 8,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            ProductPictureId = 9,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            ProductPictureId = 10,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            ProductPictureId = 11,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            ProductPictureId = 12,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            ProductPictureId = 13,
                            PictureUrl = "https://f8n-production.s3.amazonaws.com/creators/profile/gra96ordf-aufkleber-trollface-jpg-cibag1.jpg",
                            ProductId = 13
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Order", b =>
                {
                    b.HasOne("DataLayer.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DataLayer.Entities.OrderProduct", b =>
                {
                    b.HasOne("DataLayer.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Entities.Product", b =>
                {
                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("DataLayer.Entities.Manufacture", "Manufacture")
                        .WithMany("Products")
                        .HasForeignKey("ManufactureId");

                    b.Navigation("Category");

                    b.Navigation("Manufacture");
                });

            modelBuilder.Entity("DataLayer.Entities.ProductPicture", b =>
                {
                    b.HasOne("DataLayer.Entities.Product", "Product")
                        .WithMany("ProductPictures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("DataLayer.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataLayer.Entities.Manufacture", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataLayer.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DataLayer.Entities.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductPictures");
                });
#pragma warning restore 612, 618
        }
    }
}
